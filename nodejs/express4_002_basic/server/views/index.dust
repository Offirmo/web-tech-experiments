<!DOCTYPE html>
<!-- html_004 template -->
<!-- js_005 template -->
<html lang="{lang}" xmlns:ng="https://angularjs.org" ng-controller="LandingCtrl">
<head>
	<meta charset="utf-8">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><!-- https://stackoverflow.com/questions/14637943/what-is-x-ua-compatible-when-it-references-ie-edge-chrome-1 -->
	<meta name="fragment" content="!" /><!-- https://code.google.com/web/ajaxcrawling/docs/specification.html -->

	<title>express4_002_basic</title>

	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<!-- favicons -->
	<!-- For Modern Browsers with PNG Support -->
	<link rel="icon" href="misc/favicon_16x16.png" type="image/png" />
	<!-- ... -->

	<!-- style -->
	<link href="bower_components/pace/themes/blue/pace-theme-flash.css" rel="stylesheet" />
	<style>
		/*...*/
	</style>


	<!-- js -->
	<!-- live reload script -->{LRScript|s}
	<script src="bower_components/pace/pace.min.js"></script>
	<script>
		console.log("hello from header !");
	</script>
	<script data-main="misc/components.js" src="bower_components/requirejs/require.js"></script>
</head>
<body>

<div id="content">
<div class="container">

<h3><a ui-sref="landing">Hello from <code>express4_002_basic/public/index.html</code> !</a></h3>
<p><strong>Important note : on links below, *pages not found*, including 404 test, may not fail with a 404 since, in a webapp case, it may be a user-routed page. It's up to the client side to handle such 404. However, resources not found will correctly yield a 404. (Some heuristic is used)</strong></p>
<p>
	What you can do :
<ul>
	<li> <a href="/">Home</a>
	<li> <a href="/page1">Another page</a> (dust template, with an image)
	<li> <a href="/page2">Yet another page</a> (dust template, with a 404 image)
	<li> <a href="/page404">404 as page</a> (missing page) and <a href="/404.txt">404 as rsrc</a>
	<li> <a href="/runtime_error">Generate a runtime error</a>
	<li> <a href="/sync_error">Throw a synchronous error while processing</a> (= caught by express)
	<li> <a href="/async_error">Throw an asynchronous error while processing</a> (= uncaught !)
	<li>Timeout :
		<ul>
			<li> <a href="/timeout/3">3 seconds</a>
			<li> <a href="/timeout/30">30 seconds</a>
			<li> <a href="/timeout/119">119 seconds</a>
			<li> <a href="/timeout/120">120 seconds</a> (FF timeout)
			<li> <a href="/timeout/121">121 seconds</a> (Chrome timeout)
			<li> <a href="/timeout/foo">«foo» seconds</a> (cause runtime error ;)
		</ul>
	</li>
	<li> <a href="/foo/../../secret.txt">Try an attack</a>
	<li> <a href="/toto/">correctly with slash</a> or <a href="/toto">wrongly without slash</a>
	<li> <a href="/toto/">correctly with good case</a> or <a href="/TotO/">wrongly with Bad CasE</a>
	<li> <a href="/express-debug">A server debug panel</a>
</ul>
</p>
</div>
</div>

<noscript>Your browser either does not support JavaScript, or has it turned off.</noscript>
<script>
	console.log('hello from body !');

	window.main = function()
	{
		console.log('Starting main...');
		requirejs(
		[
			'angular',
			'angular-ui-router',
			'angular-bootstrap'
		],
		function() {
			var app = angular.module('App', ['ui.bootstrap']);

			app.controller('LandingCtrl', function($scope, $document) {
				$scope.lang = $document[0].documentElement.lang;
				console.log($document[0].documentElement.lang);
			});

			// angular manual initialisation since we use a script loader
			// cf. https://docs.angularjs.org/guide/bootstrap
			// cf.
			console.log('Bootstrapping angular...');
			angular.element(document).ready(function() {
				angular.bootstrap(document, ['App']);
			});
		});
	};
</script>

</body>
</html>
